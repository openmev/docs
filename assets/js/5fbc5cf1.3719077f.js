"use strict";(self.webpackChunkopenmev_docs=self.webpackChunkopenmev_docs||[]).push([[207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(3117),o=(n(7294),n(3905));const r={sidebar_position:5},i="SecureRPC and OpenMEV RPC Gateway",s={unversionedId:"api",id:"api",title:"SecureRPC and OpenMEV RPC Gateway",description:"Supported RPC and API Endpoints for SecureRPC and OpenMEV",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/api",editUrl:"https://github.com/openmev/docs/edit/main/docs/api.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Private Transactions",permalink:"/guides/send-private-tx"},next:{title:"Transaction Status API",permalink:"/transaction-status"}},l={},p=[{value:"Block parameters:",id:"block-parameters",level:2},{value:"Subscribing",id:"subscribing",level:2},{value:"Logs",id:"logs",level:2},{value:"HEX value encoding",id:"hex-value-encoding",level:2},{value:"<code>Websocket</code>",id:"websocket",level:2},{value:"Response RPC Methods",id:"response-rpc-methods",level:2},{value:"Supported RPC",id:"supported-rpc",level:2},{value:"Example: <code>eth_blockNumber</code>",id:"example-eth_blocknumber",level:4},{value:"Example: Javascript <code>eth_blockNumber</code>",id:"example-javascript-eth_blocknumber",level:4},{value:"OpenMEV Transaction",id:"openmev-transaction",level:3}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"securerpc-and-openmev-rpc-gateway"},"SecureRPC and OpenMEV RPC Gateway"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Supported RPC and API Endpoints for SecureRPC and OpenMEV")),(0,o.kt)("p",null,"OpenMEV provides HTTP endpoints to interact with the reputation service and HTTP/WS endpoints to access onchain data\nwith a subgraph."),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"If you want to use the OpenMEV APIs with a JavaScript library you can also use the npm package")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("a",{parentName:"p",href:"https://github.com/manifoldfinance/libmev"},(0,o.kt)("inlineCode",{parentName:"a"},"libmev")),". "))),(0,o.kt)("h2",{id:"block-parameters"},"Block parameters:"),(0,o.kt)("p",null,"When you make requests that might have different results depending on the block accessed, the block parameter specifies the block. Methods such as ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_getTransactionByBlockNumberAndIndex")," have a block parameter."),(0,o.kt)("p",null,"The block parameter can have the following values:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"blockNumber")," : quantity - The block number, specified in hexadecimal or decimal. 0 represents the genesis block.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"earliest")," : tag - The earliest (genesis) block.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"latest")," : tag - The last block mined.",(0,o.kt)("br",{parentName:"p"}),"\n",(0,o.kt)("inlineCode",{parentName:"p"},"pending")," : tag - The last block mined plus pending transactions. Use only with ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_getTransactionCount"),".     "),(0,o.kt)("h2",{id:"subscribing"},"Subscribing"),(0,o.kt)("p",null,"Use ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_subscribe")," to create subscriptions for the following event types:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"New headers     "),(0,o.kt)("li",{parentName:"ul"},"Logs     "),(0,o.kt)("li",{parentName:"ul"},"Pending transactions     "),(0,o.kt)("li",{parentName:"ul"},"Dropped transactions     "),(0,o.kt)("li",{parentName:"ul"},"Synchronizing     ")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"TIP Use ",(0,o.kt)("inlineCode",{parentName:"p"},"mev_subscribe")," to create subscriptions for logs on private transactions.")),(0,o.kt)("h2",{id:"logs"},"Logs"),(0,o.kt)("p",null,"To notify you about logs included in new blocks, use the logs' parameter with ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_subscribe")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"mev_subscribe"),". Specify a filter object to receive notifications only for logs matching your filter."),(0,o.kt)("p",null,"Logs subscriptions have a filter object parameter with the following fields:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"address")," - (optional) Either an address or an array of addresses. Returns only logs created from these addresses.\n",(0,o.kt)("inlineCode",{parentName:"p"},"topics")," - (optional) Returns only logs that match the specified topics.\n",(0,o.kt)("inlineCode",{parentName:"p"},"fromBlock")," - (optional) The earliest block from which to return logs.\n",(0,o.kt)("inlineCode",{parentName:"p"},"toBlock")," - (optional) The last block from which to return logs."),(0,o.kt)("p",null,"If a chain ",(0,o.kt)("em",{parentName:"p"},"reorganization")," occurs, the subscription publishes notifications for logs from the old chain with the removed property in the log object set to true. This means the subscription can publish notifications for multiple logs for the same transaction."),(0,o.kt)("p",null,"The logs subscription returns log objects."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"For private transactions, the privacy group ID must be specified.")),(0,o.kt)("h2",{id:"hex-value-encoding"},"HEX value encoding"),(0,o.kt)("p",null,"At present there are two key datatypes that are passed over JSON: ",(0,o.kt)("strong",{parentName:"p"},"unformatted byte arrays and quantities"),". "),(0,o.kt)("p",null,"Both are passed with a hex encoding, however with different requirements to formatting:"),(0,o.kt)("p",null,"When encoding ",(0,o.kt)("strong",{parentName:"p"},"QUANTITIES")," (integers, numbers): encode as hex, prefix with \u201c0x\u201d, the most compact representation (slight exception: zero should be represented as \u201c0x0\u201d). Examples:"),(0,o.kt)("p",null,"0x41 (65 in decimal)\n0x400 (1024 in decimal)\n",(0,o.kt)("strong",{parentName:"p"},"WRONG"),": 0x (should always have at least one digit - zero is \u201c0x0\u201d)\n",(0,o.kt)("strong",{parentName:"p"},"WRONG"),": 0x0400 (no leading zeroes allowed)\n",(0,o.kt)("strong",{parentName:"p"},"WRONG"),": ff (must be prefixed 0x)\nWhen encoding",(0,o.kt)("strong",{parentName:"p"}," UNFORMATTED DATA "),"(byte arrays, account addresses, hashes, bytecode arrays): encode as hex, prefix with \u201c0x\u201d, two hex digits per byte. Examples:"),(0,o.kt)("p",null,"0x41 (size 1, \u201cA\u201d)\n0x004200 (size 3, \u201c\\0B\\0\u201d)\n0x (size 0, \u201c\u201d)\n",(0,o.kt)("strong",{parentName:"p"},"WRONG"),": 0xf0f0f (must be even number of digits)\n",(0,o.kt)("strong",{parentName:"p"},"WRONG"),": 004200 (must be prefixed 0x)"),(0,o.kt)("h2",{id:"websocket"},(0,o.kt)("inlineCode",{parentName:"h2"},"Websocket")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"NOTE: You must have ",(0,o.kt)("inlineCode",{parentName:"p"},"wscat")," installed - ",(0,o.kt)("inlineCode",{parentName:"p"},"npm i -g wscat"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Shell"',title:'"Shell"'},"wscat -c wss://api.sushirelay.com/v1\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc",metastring:'title="Response"',title:'"Response"'},'< {"method":"manifold_motd","jsonrpc":"2.0","params":{"result":{"notice":"THIS IS A NOTICE OF MONITORING OF MANIFOLD FINANCE, INC NETWORK INFORMATION SYSTEMS  By logging into Manifold Finance, Inc computer systems, you acknowledge and consent to monitoring of this system.  Network Policy <https://docs.manifoldfinance.com/network/policy>  By using this network, you certify that you have read, understand, and agree to abide by the Rules of Behavior for Manifold Finance Network Platform."}}}\n>\n')),(0,o.kt)("h2",{id:"response-rpc-methods"},"Response RPC Methods"),(0,o.kt)("p",null,"These are methods we support for which we return static responses to ensure compliance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"eth_chainId\neth_protocolVersion\neth_mining\neth_hashrate\neth_accounts\neth_syncing\neth_coinbase\nnet_listening\nnet_peerCount\nnet_version\nweb3_clientVersion\n")),(0,o.kt)("h2",{id:"supported-rpc"},"Supported RPC"),(0,o.kt)("p",null,"These are all methods we expose and proxy to our internal eth clients"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"eth_blockNumber\neth_call\neth_estimateGas\neth_gasPrice\neth_getBalance\neth_getBlockByHash\neth_getBlockByNumber\neth_getBlockTransactionCountByHash\neth_getBlockTransactionCountByNumber\neth_getCode\neth_getStorageAt\neth_getTransactionByBlockHashAndIndex\neth_getTransactionByBlockNumberAndIndex\neth_getTransactionByHash\neth_getTransactionCount\neth_getTransactionReceipt\neth_getUncleByBlockHashAndIndex\neth_getUncleByBlockNumberAndIndex\neth_getUncleCountByBlockHash\neth_getUncleCountByBlockNumber\neth_sign\neth_signTypedData\neth_sendRawTransaction\n")),(0,o.kt)("h4",{id:"example-eth_blocknumber"},"Example: ",(0,o.kt)("inlineCode",{parentName:"h4"},"eth_blockNumber")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X POST \'https://api.sushirelay.com/v1\' \\\n-H \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "method":"eth_blockNumber",\n    "params":[],\n    "id":83\n}\'\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Returns")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n    "id": "83",\n    "jsonrpc": "2.0",\n    "result": "0xdef739"\n}\n')),(0,o.kt)("h4",{id:"example-javascript-eth_blocknumber"},"Example: Javascript ",(0,o.kt)("inlineCode",{parentName:"h4"},"eth_blockNumber")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'const axios = require(\'axios\');\nlet data = JSON.stringify({\n  "jsonrpc": "2.0",\n  "method": "eth_blockNumber",\n  "params": [],\n  "id": 83\n});\n\nconst config = {\n  method: \'post\',\n  url: \'https://api.sushirelay.com/v1\',\n  headers: { \n    \'Content-Type\': \'application/json\'\n  },\n  timeout: 1000,\n  data : data\n};\n\naxios(config)\n.then(function (response) {\n  console.log(JSON.stringify(response.data));\n})\n.catch(function (error) {\n  console.log(error);\n});\n')),(0,o.kt)("h3",{id:"openmev-transaction"},"OpenMEV Transaction"),(0,o.kt)("p",null,"Same signature as ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_sendRawTransaction")," but the tx is eligible for arb and goes into our OpenMEV workflow (e.g. gas\nrebate). Anything received via ",(0,o.kt)("inlineCode",{parentName:"p"},"eth_sendRawTransaction")," just gets relayed"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"manifold_sendTransaction\n")))}d.isMDXComponent=!0}}]);