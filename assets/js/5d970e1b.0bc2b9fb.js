"use strict";(self.webpackChunkopenmev_docs=self.webpackChunkopenmev_docs||[]).push([[289],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),h=s,m=d["".concat(l,".").concat(h)]||d[h]||p[h]||r;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7908:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(3117),s=(n(7294),n(3905));const r={},o="Flashbots Cheatsheet",i={unversionedId:"guides/cheatsheet",id:"guides/cheatsheet",title:"Flashbots Cheatsheet",description:"source via docs.flashbots.net/flashbots-auction/overview",source:"@site/docs/guides/cheatsheet.md",sourceDirName:"guides",slug:"/guides/cheatsheet",permalink:"/guides/cheatsheet",editUrl:"https://github.com/openmev/docs/edit/main/docs/guides/cheatsheet.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"bundles-adv",permalink:"/guides/bundles-adv"},next:{title:"Private Transactions",permalink:"/guides/mining-pools"}},l={},c=[{value:"Anatomy of a bundle",id:"anatomy-of-a-bundle",level:2},{value:"Miner reward through coinbase.transfer()",id:"miner-reward-through-coinbasetransfer",level:2},{value:"Bundle pricing",id:"bundle-pricing",level:2},{value:"Eligibility",id:"eligibility",level:2},{value:"Reverting txs",id:"reverting-txs",level:2},{value:"Debugging",id:"debugging",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,s.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"flashbots-cheatsheet"},"Flashbots Cheatsheet"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("a",{parentName:"p",href:"https://docs.flashbots.net/flashbots-auction/overview"},"source via docs.flashbots.net/flashbots-auction/overview"))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"Notes on the current state of flashbots docs with relevance to assumptions of bundle process.")),(0,s.kt)("h2",{id:"anatomy-of-a-bundle"},"Anatomy of a bundle"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const blockNumber = await provider.getBlockNumber()\nconst minTimestamp = (await provider.getBlock(blockNumber)).timestamp\nconst maxTimestamp = minTimestamp + 120\nconst signedBundle = flashbotsProvider.signBundle(\n    [\n      {\n        signedTransaction: SIGNED_ORACLE_UPDATE_FROM_PENDING_POOL // serialized signed transaction hex\n      },\n      {\n        signer: wallet, // ethers signer\n        transaction: transaction // ethers populated transaction object\n      }\n    ])\nconst bundleReceipt = await flashbotsProvider.sendRawBundle(\n    signedBundle, // bundle we signed above\n    targetBlockNumber, // block number at which this bundle is valid\n    {\n      minTimestamp, // optional minimum timestamp at which this bundle is valid (inclusive)\n      maxTimestamp, // optional maximum timestamp at which this bundle is valid (inclusive)\n      revertingTxHashes: [tx1, tx2] // optional list of transaction hashes allowed to revert. Without specifying here, any revert invalidates the entire bundle.\n    }\n  )\n)\n")),(0,s.kt)("h2",{id:"miner-reward-through-coinbasetransfer"},"Miner reward through coinbase.transfer()"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.flashbots.net/flashbots-auction/searchers/advanced/coinbase-payment"},"https://docs.flashbots.net/flashbots-auction/searchers/advanced/coinbase-payment")),(0,s.kt)("p",null,"To include as last action of smart contract"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"block.coinbase.transfer(AMOUNT_TO_TRANSFER)\n\n")),(0,s.kt)("p",null,"Edge case to deal with sending to a miner contract"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-solidity"},"block.coinbase.call{value: _ethAmountToCoinbase}(new bytes(0));\n")),(0,s.kt)("p",null,"subject to ",(0,s.kt)("a",{parentName:"p",href:"https://medium.com/coinmonks/protect-your-solidity-smart-contracts-from-reentrancy-attacks-9972c3af7c21"},"reentrancy attacks")),(0,s.kt)("h2",{id:"bundle-pricing"},"Bundle pricing"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.flashbots.net/flashbots-auction/searchers/advanced/bundle-pricing"},"https://docs.flashbots.net/flashbots-auction/searchers/advanced/bundle-pricing")),(0,s.kt)("p",null,"Conflicting bundles received by flashbots are ordered by the following formula:"),(0,s.kt)("p",null,(0,s.kt)("img",{parentName:"p",src:"https://latex.codecogs.com/png.latex?%5Cbg_white&space;%5CLarge&space;score=%5Cfrac%7BminerBribe&space;+&space;totalGasUsed&space;*&space;priorityFeePerGas&space;-&space;mempoolGasUsed&space;*&space;priorityFeePerGas%7D%7BtotalGasUsed%7D",alt:"\\bg_white \\Large score=\\frac{minerBribe + totalGasUsed * priorityFeePerGas - mempoolGasUsed * priorityFeePerGas}{totalGasUsed}"})),(0,s.kt)("h2",{id:"eligibility"},"Eligibility"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.flashbots.net/flashbots-auction/miners/mev-geth-spec/v04"},"https://docs.flashbots.net/flashbots-auction/miners/mev-geth-spec/v04")),(0,s.kt)("p",null,"Bundles must have a target ",(0,s.kt)("inlineCode",{parentName:"p"},"blockNumber")," and a ",(0,s.kt)("inlineCode",{parentName:"p"},"priorityFeePerGas")," >= 1 Gwei."),(0,s.kt)("h2",{id:"reverting-txs"},"Reverting txs"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs.flashbots.net/flashbots-auction/miners/mev-geth-spec/v04"},"https://docs.flashbots.net/flashbots-auction/miners/mev-geth-spec/v04")),(0,s.kt)("p",null,'"When constructing a block the node should reject any bundle or megabundle that has a reverting transaction unless its hash is included in the RevertingTxHashes list of the bundle"'),(0,s.kt)("h2",{id:"debugging"},"Debugging"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://docs-staging.flashbots.net/flashbots-auction/searchers/advanced/troubleshooting"},"https://docs-staging.flashbots.net/flashbots-auction/searchers/advanced/troubleshooting")),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Transaction failure (ANY within the bundle)"),(0,s.kt)("li",{parentName:"ol"},"Incentives (gas price/coinbase transfers) not high enough to offset value of block space")),(0,s.kt)("p",null,"Simulate bundle:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"  const signedTransactions = await flashbotsProvider.signBundle(transactionBundle)\n  const simulation = await flashbotsProvider.simulate(signedTransactions, targetBlockNumber, targetBlockNumber + 1)\n  console.log(JSON.stringify(simulation, null, 2))\n")),(0,s.kt)("ol",{start:3},(0,s.kt)("li",{parentName:"ol"},"Competitors paying more")),(0,s.kt)("p",null,"Get conflicting bundles for a prior block:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"const signedTransactions = await flashbotsProvider.signBundle(transactionBundle)\nconsole.log(await flashbotsProvider.getConflictingBundle(\n      signedTransactions,\n      13140328 // blockNumber\n  ))\n")),(0,s.kt)("ol",{start:4},(0,s.kt)("li",{parentName:"ol"},"Bundle received too late to appear in target block")),(0,s.kt)("p",null,"Get submission time data and compare to block time:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'console.log(\n  await flashbotsProvider.getBundleStats("0x123456789abcdef123456789abcdef123456789abcdef123456789abcdef1234", 13509887)\n  )\n\n')))}p.isMDXComponent=!0}}]);