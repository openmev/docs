"use strict";(self.webpackChunkopenmev_docs=self.webpackChunkopenmev_docs||[]).push([[759],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5886:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(3117),a=(n(7294),n(3905));const o={},i="Private Transactions",s={unversionedId:"guides/send-private-tx",id:"guides/send-private-tx",title:"Private Transactions",description:"How to send a single transaction using SecureRPC",source:"@site/docs/guides/send-private-tx.md",sourceDirName:"guides",slug:"/guides/send-private-tx",permalink:"/guides/send-private-tx",editUrl:"https://github.com/openmev/docs/edit/main/docs/guides/send-private-tx.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RPC Spec",permalink:"/guides/rpc-spec"},next:{title:"OpenMEV RPC",permalink:"/api"}},c={},l=[{value:"Sending a Private Transaction",id:"sending-a-private-transaction",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"private-transactions"},"Private Transactions"),(0,a.kt)("p",null,"How to send a single transaction using SecureRPC"),(0,a.kt)("p",null,"If you want to send a single transaction privately, without sending it as a bundle, you can use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"eth_sendPrivateTransaction")," method."),(0,a.kt)("p",null,"This method attempts to send your transaction to miners on every block for a maximum of 25 blocks. No need to listen for\nthe next block and re-send yourself."),(0,a.kt)("p",null,"Private transactions can be cancelled with the ",(0,a.kt)("inlineCode",{parentName:"p"},"eth_cancelPrivateTransaction"),' method. Once a transaction is submitted\nfrom the relay to a miner we cannot "recall" it. However, we can cancel submitting transactions for future blocks.'),(0,a.kt)("p",null,"See RPC endpoint for JSON-RPC definitions of the methods."),(0,a.kt)("p",null,"These methods are currently implemented in the ",(0,a.kt)("inlineCode",{parentName:"p"},"libmev")," library."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// ethers.js\nconst signer = Wallet.createRandom();\nconst provider = new providers.JsonRpcProvider('http://localhost:8545');\nconst flashbotsProvider = await FlashbotsBundleProvider.create(provider, signer);\n\nconst transaction = {\n  from: signer.address,\n  to: signer.address,\n  value: '0x42',\n  gasPrice: BigNumber.from(99).mul(1e9),\n  gasLimit: BigNumber.from(21000),\n};\n\nconst res = await flashbotsProvider.sendPrivateTransaction(\n  {\n    transaction,\n    signer,\n  },\n  {\n    maxBlockNumber: (await provider.getBlockNumber()) + 5, // only allow tx to be mined for the next 5 blocks\n  },\n);\n\nconst waitRes = await res.wait();\nif (waitRes === FlashbotsTransactionResolution.TransactionIncluded) {\n  console.log('Private transaction successfully mined.');\n} else if (waitRes === FlashbotsTransactionResolution.TransactionDropped) {\n  console.log('Private transaction was not mined and has been removed from the system.');\n}\n")),(0,a.kt)("h2",{id:"sending-a-private-transaction"},"Sending a Private Transaction"),(0,a.kt)("p",null,"To send a ",(0,a.kt)("em",{parentName:"p"},"single")," transaction without having to send it as a bundle, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"sendPrivateTransaction")," function. This\nmethod allows us to process transactions faster and more efficiently than regular bundles. When you send a transaction\nusing this method, we will try to send it to miners over the next 25 blocks (up to, but not past the target block\nnumber)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const tx = {\n  from: wallet.address,\n  to: wallet.address,\n  value: '0x42',\n  gasPrice: BigNumber.from(99).mul(1e9), // 99 gwei\n  gasLimit: BigNumber.from(21000),\n};\nconst privateTx = {\n  transaction: tx,\n  signer: wallet,\n};\nconst res = await flashbotsProvider.sendPrivateTransaction(privateTx);\n")),(0,a.kt)("p",null,"Optionally, you can set the following parameters to fine-tune your submission:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// highest block number your tx can be included in\nconst maxBlockNumber = (await provider.getBlockNumber()) + 10;\n// timestamp for simulations\nconst minTimestamp = 1645753192;\nconst res = await flashbotsProvider.sendPrivateTransaction(privateTx, { maxBlockNumber, minTimestamp });\n")))}p.isMDXComponent=!0}}]);